"use strict";(self.webpackChunk_react_sigma_website=self.webpackChunk_react_sigma_website||[]).push([[811],{7169:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var s=n(1085),i=n(1184);const a={},c="Introduction",o={id:"start-introduction",title:"Introduction",description:"Concept",source:"@site/docs/start-introduction.md",sourceDirName:".",slug:"/start-introduction",permalink:"/react-sigma/docs/start-introduction",draft:!1,unlisted:!1,editUrl:"https://github.com/sim51/react-sigma/tree/main/packages/website/docs/start-introduction.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",next:{title:"Installation",permalink:"/react-sigma/docs/start-installation"}},r={},d=[{value:"Concept",id:"concept",level:2},{value:"React context",id:"react-context",level:2},{value:"Lifecycle",id:"lifecycle",level:2},{value:"Modules",id:"modules",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsx)(t.h2,{id:"concept",children:"Concept"}),"\n",(0,s.jsxs)(t.p,{children:["React Sigma is strongly inspired by ",(0,s.jsx)(t.a,{href:"https://react-leaflet.js.org",children:"react-leaflet"}),", even the documentation."]}),"\n",(0,s.jsxs)(t.p,{children:["It just provides some bindings (and helpers) between ",(0,s.jsx)(t.a,{href:"https://reactjs.org/",children:"React"})," and ",(0,s.jsx)(t.a,{href:"https://www.sigmajs.org/",children:"Sigma"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["The main component, ie. ",(0,s.jsx)(t.code,{children:"SigmaContainer"}),", creates a Sigma instance with the provided settings and graph."]}),"\n",(0,s.jsxs)(t.p,{children:["If its properties ",(0,s.jsx)(t.code,{children:"settings"})," or ",(0,s.jsx)(t.code,{children:"graph"})," are updated, the instance is killed and re-created (but its camera state is restored)."]}),"\n",(0,s.jsxs)(t.p,{children:["I recommend you to ",(0,s.jsx)(t.strong,{children:"NOT UPDATE"})," those options to avoid performance issues, and to use a constant outside react component ( or use a ",(0,s.jsx)(t.code,{children:"useMemo"}),").\n",(0,s.jsx)(t.a,{href:"https://www.sigmajs.org/",children:"Sigma"})," Sigma (and ",(0,s.jsx)(t.a,{href:"https://graphology.github.io/",children:"graphology"}),") comes with methods that allow you to update graph but also settings.\nSo you should treat it as an ",(0,s.jsx)(t.strong,{children:"immutable component"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"react-context",children:"React context"}),"\n",(0,s.jsxs)(t.p,{children:["React sigma uses ",(0,s.jsx)(t.a,{href:"https://reactjs.org/docs/context.html",children:"react's context API"})," to share the sigma instance with the ",(0,s.jsx)(t.code,{children:"SigmaContainer"}),"'s children."]}),"\n",(0,s.jsx)(t.p,{children:"Each Sigma instance has its own context, so you can create multiple graph in a page."}),"\n",(0,s.jsxs)(t.p,{children:["In your components, you can use the hook ",(0,s.jsx)(t.code,{children:"useSigma()"})," that gives you the sigma instance, and so the underlying graph with ",(0,s.jsx)(t.code,{children:"sigma.getGraph()"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"lifecycle",children:"Lifecycle"}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:["The ",(0,s.jsx)(t.code,{children:"SigmaContainer"})," renders a DOM structure that contains a ",(0,s.jsx)(t.code,{children:'<div className="sigma-container">'})," element."]}),"\n",(0,s.jsxs)(t.li,{children:["The ",(0,s.jsx)(t.code,{children:"SigmaContainer"})," instantiates ",(0,s.jsx)(t.a,{href:"https://www.sigmajs.org/",children:"Sigma"})," for the created ",(0,s.jsx)(t.code,{children:"<div>"})," and create a React context where the instance is stored."]}),"\n",(0,s.jsxs)(t.li,{children:["The ",(0,s.jsx)(t.code,{children:"SigmaContainer"})," renders its children components."]}),"\n",(0,s.jsx)(t.li,{children:"Each child has access to the sigma instance via the shared context, so they can manipulate it (and its underlying graph)"}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"IMPORTANT:"})," If you change properties on the ",(0,s.jsx)(t.code,{children:"SigmaContainer"}),", the component will be rendered again as well as all its children. So the sigma instance will be killed and recreated (but its camera state is restored)."]}),"\n",(0,s.jsx)(t.h2,{id:"modules",children:"Modules"}),"\n",(0,s.jsx)(t.p,{children:"React sigma is composed of multiple modules."}),"\n",(0,s.jsxs)(t.p,{children:["The core one (ie. ",(0,s.jsx)(t.code,{children:"@react-sigma/core"}),"), is the main that contains all the component to control the lifecycle between React & Sigma."]}),"\n",(0,s.jsxs)(t.p,{children:["The other modules manage graph layouts, like ",(0,s.jsx)(t.code,{children:"@react-sigma/layout-forceatlas2"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"With this architecture, you can control which graph layout you want to use without to increase the size of your bundle."})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1184:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>o});var s=n(4041);const i={},a=s.createContext(i);function c(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);