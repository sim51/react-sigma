"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[629],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),d=r,h=u["".concat(l,".").concat(d)]||u[d]||m[d]||i;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2768:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const i={},o="Introduction",s={unversionedId:"start-introduction",id:"start-introduction",title:"Introduction",description:"Concept",source:"@site/docs/start-introduction.md",sourceDirName:".",slug:"/start-introduction",permalink:"/react-sigma/docs/start-introduction",draft:!1,editUrl:"https://github.com/sim51/react-sigma/tree/main/packages/website/docs/start-introduction.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",next:{title:"Installation",permalink:"/react-sigma/docs/start-installation"}},l={},c=[{value:"Concept",id:"concept",level:2},{value:"React context",id:"react-context",level:2},{value:"Lifecycle",id:"lifecycle",level:2},{value:"Modules",id:"modules",level:2}],p={toc:c};function m(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"introduction"},"Introduction"),(0,r.kt)("h2",{id:"concept"},"Concept"),(0,r.kt)("p",null,"React Sigma is strongly inspired by ",(0,r.kt)("a",{parentName:"p",href:"https://react-leaflet.js.org"},"react-leaflet"),", even the documentation."),(0,r.kt)("p",null,"It just provides some bindings (and helpers) between ",(0,r.kt)("a",{parentName:"p",href:"https://reactjs.org/"},"React")," and ",(0,r.kt)("a",{parentName:"p",href:"https://www.sigmajs.org/"},"Sigma"),"."),(0,r.kt)("p",null,"The main component, ie. ",(0,r.kt)("inlineCode",{parentName:"p"},"SigmaContainer"),", creates a Sigma instance with the provided settings and graph."),(0,r.kt)("p",null,"If its properties ",(0,r.kt)("inlineCode",{parentName:"p"},"settings")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"graph")," are updated, the instance is killed and re-created (but its camera state is restored)."),(0,r.kt)("p",null,"I recommend you to ",(0,r.kt)("strong",{parentName:"p"},"NOT UPDATE")," those options to avoid performance issues, and to use a ",(0,r.kt)("inlineCode",{parentName:"p"},"useMemo")," for the settings.\n",(0,r.kt)("a",{parentName:"p",href:"https://www.sigmajs.org/"},"Sigma")," Sigma (and ",(0,r.kt)("a",{parentName:"p",href:"https://graphology.github.io/"},"graphology"),") comes with methods that allow you to update graph but also settings.\nSo you should treat it as an ",(0,r.kt)("strong",{parentName:"p"},"immutable component"),"."),(0,r.kt)("h2",{id:"react-context"},"React context"),(0,r.kt)("p",null,"React sigma uses ",(0,r.kt)("a",{parentName:"p",href:"https://reactjs.org/docs/context.html"},"react's context API")," to share the sigma instance with the ",(0,r.kt)("inlineCode",{parentName:"p"},"SigmaContainer"),"'s children."),(0,r.kt)("p",null,"Each Sigma instance has its own context, so you can create multiple graph in a page."),(0,r.kt)("p",null,"In your components, you can use the hook ",(0,r.kt)("inlineCode",{parentName:"p"},"useSigma()")," that gives you the sigma instance, and so the underlying graph with ",(0,r.kt)("inlineCode",{parentName:"p"},"sigma.getGraph()"),"."),(0,r.kt)("h2",{id:"lifecycle"},"Lifecycle"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"SigmaContainer")," renders a DOM structure that contains a ",(0,r.kt)("inlineCode",{parentName:"li"},'<div className="sigma-container">')," element."),(0,r.kt)("li",{parentName:"ol"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"SigmaContainer")," instantiates ",(0,r.kt)("a",{parentName:"li",href:"https://www.sigmajs.org/"},"Sigma")," for the created ",(0,r.kt)("inlineCode",{parentName:"li"},"<div>")," and create a React context where the instance is stored."),(0,r.kt)("li",{parentName:"ol"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"SigmaContainer")," renders its children components."),(0,r.kt)("li",{parentName:"ol"},"Each child has access to the sigma instance via the shared context, so they can manipulate it (and its underlying graph)")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"IMPORTANT:")," If you change properties on the ",(0,r.kt)("inlineCode",{parentName:"p"},"SigmaContainer"),", the component will be rendered again as well as all its children. So the sigma instance will be killed and recreated (but its camera state is restored)."),(0,r.kt)("h2",{id:"modules"},"Modules"),(0,r.kt)("p",null,"React sigma is composed of multiple modules."),(0,r.kt)("p",null,"The core one (ie. ",(0,r.kt)("inlineCode",{parentName:"p"},"@react-sigma/core"),"), is the main that contains all the component to control the lifecycle between React & Sigma."),(0,r.kt)("p",null,"The other modules manage graph layouts, like ",(0,r.kt)("inlineCode",{parentName:"p"},"@react-sigma/layout-forceatlas2"),"."),(0,r.kt)("p",null,"With this architecture, you can control which graph layout you want to use without to increase the size of your bundle."))}m.isMDXComponent=!0}}]);