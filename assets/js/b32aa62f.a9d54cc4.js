"use strict";(self.webpackChunk_react_sigma_website=self.webpackChunk_react_sigma_website||[]).push([[5328],{7171:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"category","label":"Getting started","items":[{"type":"link","label":"Introduction","href":"/react-sigma/docs/start-introduction","docId":"start-introduction","unlisted":false},{"type":"link","label":"Installation","href":"/react-sigma/docs/start-installation","docId":"start-installation","unlisted":false},{"type":"link","label":"Setup","href":"/react-sigma/docs/start-setup","docId":"start-setup","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"category","label":"API","items":[{"type":"link","label":"index","href":"/react-sigma/docs/api","docId":"api","unlisted":false},{"type":"category","label":"@react-sigma/core","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"functions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Function: ControlsContainer()","href":"/react-sigma/docs/api/core/functions/ControlsContainer","docId":"api/core/functions/ControlsContainer","unlisted":false},{"type":"link","label":"Function: FullScreenControl()","href":"/react-sigma/docs/api/core/functions/FullScreenControl","docId":"api/core/functions/FullScreenControl","unlisted":false},{"type":"link","label":"Function: SearchControl()","href":"/react-sigma/docs/api/core/functions/SearchControl","docId":"api/core/functions/SearchControl","unlisted":false},{"type":"link","label":"Function: SigmaContainer()","href":"/react-sigma/docs/api/core/functions/SigmaContainer","docId":"api/core/functions/SigmaContainer","unlisted":false},{"type":"link","label":"Function: ZoomControl()","href":"/react-sigma/docs/api/core/functions/ZoomControl","docId":"api/core/functions/ZoomControl","unlisted":false},{"type":"link","label":"Function: getUniqueKey()","href":"/react-sigma/docs/api/core/functions/getUniqueKey","docId":"api/core/functions/getUniqueKey","unlisted":false},{"type":"link","label":"Function: isEqual()","href":"/react-sigma/docs/api/core/functions/isEqual","docId":"api/core/functions/isEqual","unlisted":false},{"type":"link","label":"Function: useCamera()","href":"/react-sigma/docs/api/core/functions/useCamera","docId":"api/core/functions/useCamera","unlisted":false},{"type":"link","label":"Function: useFullScreen()","href":"/react-sigma/docs/api/core/functions/useFullScreen","docId":"api/core/functions/useFullScreen","unlisted":false},{"type":"link","label":"Function: useLoadGraph()","href":"/react-sigma/docs/api/core/functions/useLoadGraph","docId":"api/core/functions/useLoadGraph","unlisted":false},{"type":"link","label":"Function: useRegisterEvents()","href":"/react-sigma/docs/api/core/functions/useRegisterEvents","docId":"api/core/functions/useRegisterEvents","unlisted":false},{"type":"link","label":"Function: useSetSettings()","href":"/react-sigma/docs/api/core/functions/useSetSettings","docId":"api/core/functions/useSetSettings","unlisted":false},{"type":"link","label":"Function: useSigma()","href":"/react-sigma/docs/api/core/functions/useSigma","docId":"api/core/functions/useSigma","unlisted":false},{"type":"link","label":"Function: useSigmaContext()","href":"/react-sigma/docs/api/core/functions/useSigmaContext","docId":"api/core/functions/useSigmaContext","unlisted":false}]},{"type":"category","label":"interfaces","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Interface: ControlsContainerProps","href":"/react-sigma/docs/api/core/interfaces/ControlsContainerProps","docId":"api/core/interfaces/ControlsContainerProps","unlisted":false},{"type":"link","label":"Interface: FullScreenControlProps","href":"/react-sigma/docs/api/core/interfaces/FullScreenControlProps","docId":"api/core/interfaces/FullScreenControlProps","unlisted":false},{"type":"link","label":"Interface: SearchControlProps","href":"/react-sigma/docs/api/core/interfaces/SearchControlProps","docId":"api/core/interfaces/SearchControlProps","unlisted":false},{"type":"link","label":"Interface: SigmaContainerProps\\\\<N, E, G\\\\>","href":"/react-sigma/docs/api/core/interfaces/SigmaContainerProps","docId":"api/core/interfaces/SigmaContainerProps","unlisted":false},{"type":"link","label":"Interface: SigmaContextInterface\\\\<N, E, G\\\\>","href":"/react-sigma/docs/api/core/interfaces/SigmaContextInterface","docId":"api/core/interfaces/SigmaContextInterface","unlisted":false},{"type":"link","label":"Interface: ZoomControlProps","href":"/react-sigma/docs/api/core/interfaces/ZoomControlProps","docId":"api/core/interfaces/ZoomControlProps","unlisted":false}]},{"type":"category","label":"type-aliases","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Type Alias: EventHandlers","href":"/react-sigma/docs/api/core/type-aliases/EventHandlers","docId":"api/core/type-aliases/EventHandlers","unlisted":false},{"type":"link","label":"Type Alias: GraphType\\\\<N, E, G\\\\>","href":"/react-sigma/docs/api/core/type-aliases/GraphType","docId":"api/core/type-aliases/GraphType","unlisted":false}]}],"href":"/react-sigma/docs/api/core/"},{"type":"category","label":"@react-sigma/layout-circlepack","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"functions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Function: useLayoutCirclepack()","href":"/react-sigma/docs/api/layout-circlepack/functions/useLayoutCirclepack","docId":"api/layout-circlepack/functions/useLayoutCirclepack","unlisted":false}]}],"href":"/react-sigma/docs/api/layout-circlepack/"},{"type":"category","label":"@react-sigma/layout-circular","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"functions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Function: useLayoutCircular()","href":"/react-sigma/docs/api/layout-circular/functions/useLayoutCircular","docId":"api/layout-circular/functions/useLayoutCircular","unlisted":false}]}],"href":"/react-sigma/docs/api/layout-circular/"},{"type":"category","label":"@react-sigma/layout-core","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"functions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Function: WorkerLayoutControl()","href":"/react-sigma/docs/api/layout-core/functions/WorkerLayoutControl","docId":"api/layout-core/functions/WorkerLayoutControl","unlisted":false},{"type":"link","label":"Function: useLayoutFactory()","href":"/react-sigma/docs/api/layout-core/functions/useLayoutFactory","docId":"api/layout-core/functions/useLayoutFactory","unlisted":false},{"type":"link","label":"Function: useWorkerLayoutFactory()","href":"/react-sigma/docs/api/layout-core/functions/useWorkerLayoutFactory","docId":"api/layout-core/functions/useWorkerLayoutFactory","unlisted":false}]},{"type":"category","label":"interfaces","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Interface: WorkerLayoutControlProps\\\\<T\\\\>","href":"/react-sigma/docs/api/layout-core/interfaces/WorkerLayoutControlProps","docId":"api/layout-core/interfaces/WorkerLayoutControlProps","unlisted":false}]},{"type":"category","label":"type-aliases","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Type Alias: LayoutHook()\\\\<T\\\\>","href":"/react-sigma/docs/api/layout-core/type-aliases/LayoutHook","docId":"api/layout-core/type-aliases/LayoutHook","unlisted":false},{"type":"link","label":"Type Alias: LayoutWorkerHook()\\\\<T\\\\>","href":"/react-sigma/docs/api/layout-core/type-aliases/LayoutWorkerHook","docId":"api/layout-core/type-aliases/LayoutWorkerHook","unlisted":false}]}],"href":"/react-sigma/docs/api/layout-core/"},{"type":"category","label":"@react-sigma/layout-force","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"functions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Function: LayoutForceControl()","href":"/react-sigma/docs/api/layout-force/functions/LayoutForceControl","docId":"api/layout-force/functions/LayoutForceControl","unlisted":false},{"type":"link","label":"Function: useLayoutForce()","href":"/react-sigma/docs/api/layout-force/functions/useLayoutForce","docId":"api/layout-force/functions/useLayoutForce","unlisted":false},{"type":"link","label":"Function: useWorkerLayoutForce()","href":"/react-sigma/docs/api/layout-force/functions/useWorkerLayoutForce","docId":"api/layout-force/functions/useWorkerLayoutForce","unlisted":false}]},{"type":"category","label":"type-aliases","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Type Alias: LayoutForceControlProps","href":"/react-sigma/docs/api/layout-force/type-aliases/LayoutForceControlProps","docId":"api/layout-force/type-aliases/LayoutForceControlProps","unlisted":false}]}],"href":"/react-sigma/docs/api/layout-force/"},{"type":"category","label":"@react-sigma/layout-forceatlas2","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"functions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Function: LayoutForceAtlas2Control()","href":"/react-sigma/docs/api/layout-forceatlas2/functions/LayoutForceAtlas2Control","docId":"api/layout-forceatlas2/functions/LayoutForceAtlas2Control","unlisted":false},{"type":"link","label":"Function: useLayoutForceAtlas2()","href":"/react-sigma/docs/api/layout-forceatlas2/functions/useLayoutForceAtlas2","docId":"api/layout-forceatlas2/functions/useLayoutForceAtlas2","unlisted":false},{"type":"link","label":"Function: useWorkerLayoutForceAtlas2()","href":"/react-sigma/docs/api/layout-forceatlas2/functions/useWorkerLayoutForceAtlas2","docId":"api/layout-forceatlas2/functions/useWorkerLayoutForceAtlas2","unlisted":false}]},{"type":"category","label":"type-aliases","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Type Alias: LayoutForceAtlas2ControlProps","href":"/react-sigma/docs/api/layout-forceatlas2/type-aliases/LayoutForceAtlas2ControlProps","docId":"api/layout-forceatlas2/type-aliases/LayoutForceAtlas2ControlProps","unlisted":false}]}],"href":"/react-sigma/docs/api/layout-forceatlas2/"},{"type":"category","label":"@react-sigma/layout-noverlap","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"functions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Function: LayoutNoverlapControl()","href":"/react-sigma/docs/api/layout-noverlap/functions/LayoutNoverlapControl","docId":"api/layout-noverlap/functions/LayoutNoverlapControl","unlisted":false},{"type":"link","label":"Function: useLayoutNoverlap()","href":"/react-sigma/docs/api/layout-noverlap/functions/useLayoutNoverlap","docId":"api/layout-noverlap/functions/useLayoutNoverlap","unlisted":false},{"type":"link","label":"Function: useWorkerLayoutNoverlap()","href":"/react-sigma/docs/api/layout-noverlap/functions/useWorkerLayoutNoverlap","docId":"api/layout-noverlap/functions/useWorkerLayoutNoverlap","unlisted":false}]},{"type":"category","label":"type-aliases","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Type Alias: LayoutNoverlapControlProps","href":"/react-sigma/docs/api/layout-noverlap/type-aliases/LayoutNoverlapControlProps","docId":"api/layout-noverlap/type-aliases/LayoutNoverlapControlProps","unlisted":false}]}],"href":"/react-sigma/docs/api/layout-noverlap/"},{"type":"category","label":"@react-sigma/layout-random","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"functions","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Function: useLayoutRandom()","href":"/react-sigma/docs/api/layout-random/functions/useLayoutRandom","docId":"api/layout-random/functions/useLayoutRandom","unlisted":false}]}],"href":"/react-sigma/docs/api/layout-random/"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Example","items":[{"type":"link","label":"Load a graph","href":"/react-sigma/docs/example/load-graph","docId":"example/load-graph","unlisted":false},{"type":"link","label":"Events","href":"/react-sigma/docs/example/events","docId":"example/events","unlisted":false},{"type":"link","label":"Drag\'n\'Drop","href":"/react-sigma/docs/example/drag_n_drop","docId":"example/drag_n_drop","unlisted":false},{"type":"link","label":"Layouts","href":"/react-sigma/docs/example/layouts","docId":"example/layouts","unlisted":false},{"type":"link","label":"Controls","href":"/react-sigma/docs/example/controls","docId":"example/controls","unlisted":false},{"type":"link","label":"External State","href":"/react-sigma/docs/example/external_state","docId":"example/external_state","unlisted":false}],"collapsed":true,"collapsible":true},{"type":"link","label":"FAQ","href":"/react-sigma/docs/faq","docId":"faq","unlisted":false}]},"docs":{"api":{"id":"api","title":"Project structure","description":"React Sigma is composed of one core module, and several others for managing graph layouts.","sidebar":"docs"},"api/core/functions/ControlsContainer":{"id":"api/core/functions/ControlsContainer","title":"Function: ControlsContainer()","description":"ControlsContainer(props, context?): ReactNode","sidebar":"docs"},"api/core/functions/FullScreenControl":{"id":"api/core/functions/FullScreenControl","title":"Function: FullScreenControl()","description":"FullScreenControl(props, context?): ReactNode","sidebar":"docs"},"api/core/functions/getUniqueKey":{"id":"api/core/functions/getUniqueKey","title":"Function: getUniqueKey()","description":"getUniqueKey(): string","sidebar":"docs"},"api/core/functions/isEqual":{"id":"api/core/functions/isEqual","title":"Function: isEqual()","description":"isEqual(x, y): boolean","sidebar":"docs"},"api/core/functions/SearchControl":{"id":"api/core/functions/SearchControl","title":"Function: SearchControl()","description":"SearchControl(props, context?): ReactNode","sidebar":"docs"},"api/core/functions/SigmaContainer":{"id":"api/core/functions/SigmaContainer","title":"Function: SigmaContainer()","description":"SigmaContainer\\\\(props): ReactElement\\\\\\\\>","sidebar":"docs"},"api/core/functions/useCamera":{"id":"api/core/functions/useCamera","title":"Function: useCamera()","description":"useCamera(options?): object","sidebar":"docs"},"api/core/functions/useFullScreen":{"id":"api/core/functions/useFullScreen","title":"Function: useFullScreen()","description":"useFullScreen(container?): object","sidebar":"docs"},"api/core/functions/useLoadGraph":{"id":"api/core/functions/useLoadGraph","title":"Function: useLoadGraph()","description":"useLoadGraph\\\\(): (graph, clear?) => void","sidebar":"docs"},"api/core/functions/useRegisterEvents":{"id":"api/core/functions/useRegisterEvents","title":"Function: useRegisterEvents()","description":"useRegisterEvents\\\\(): (eventHandlers) => void","sidebar":"docs"},"api/core/functions/useSetSettings":{"id":"api/core/functions/useSetSettings","title":"Function: useSetSettings()","description":"useSetSettings\\\\(): (newSettings) => void","sidebar":"docs"},"api/core/functions/useSigma":{"id":"api/core/functions/useSigma","title":"Function: useSigma()","description":"useSigma\\\\(): Sigma\\\\","sidebar":"docs"},"api/core/functions/useSigmaContext":{"id":"api/core/functions/useSigmaContext","title":"Function: useSigmaContext()","description":"useSigmaContext\\\\(): SigmaContextInterface\\\\","sidebar":"docs"},"api/core/functions/ZoomControl":{"id":"api/core/functions/ZoomControl","title":"Function: ZoomControl()","description":"ZoomControl(props, context?): ReactNode","sidebar":"docs"},"api/core/index":{"id":"api/core/index","title":"@react-sigma/core","description":"Main React Sigma module that contains all the standard components & hooks  to display a graph in react.","sidebar":"docs"},"api/core/interfaces/ControlsContainerProps":{"id":"api/core/interfaces/ControlsContainerProps","title":"Interface: ControlsContainerProps","description":"Properties for ControlsContainer component.","sidebar":"docs"},"api/core/interfaces/FullScreenControlProps":{"id":"api/core/interfaces/FullScreenControlProps","title":"Interface: FullScreenControlProps","description":"Properties for FullScreenControl component.","sidebar":"docs"},"api/core/interfaces/SearchControlProps":{"id":"api/core/interfaces/SearchControlProps","title":"Interface: SearchControlProps","description":"Properties for SearchControl component","sidebar":"docs"},"api/core/interfaces/SigmaContainerProps":{"id":"api/core/interfaces/SigmaContainerProps","title":"Interface: SigmaContainerProps\\\\<N, E, G\\\\>","description":"Properties for SigmaContainer component","sidebar":"docs"},"api/core/interfaces/SigmaContextInterface":{"id":"api/core/interfaces/SigmaContextInterface","title":"Interface: SigmaContextInterface\\\\<N, E, G\\\\>","description":"Type Parameters","sidebar":"docs"},"api/core/interfaces/ZoomControlProps":{"id":"api/core/interfaces/ZoomControlProps","title":"Interface: ZoomControlProps","description":"Properties for ZoomControl component","sidebar":"docs"},"api/core/type-aliases/EventHandlers":{"id":"api/core/type-aliases/EventHandlers","title":"Type Alias: EventHandlers","description":"EventHandlers: SigmaEvents & TouchCaptorEvents & MouseCaptorEvents & CameraEvents","sidebar":"docs"},"api/core/type-aliases/GraphType":{"id":"api/core/type-aliases/GraphType","title":"Type Alias: GraphType\\\\<N, E, G\\\\>","description":"GraphType\\\\: AbstractGraph\\\\ \\\\| GraphConstructor\\\\","sidebar":"docs"},"api/layout-circlepack/functions/useLayoutCirclepack":{"id":"api/layout-circlepack/functions/useLayoutCirclepack","title":"Function: useLayoutCirclepack()","description":"useLayoutCirclepack(settings?): object","sidebar":"docs"},"api/layout-circlepack/index":{"id":"api/layout-circlepack/index","title":"@react-sigma/layout-circlepack","description":"React Sigma module for layout circlepack.","sidebar":"docs"},"api/layout-circular/functions/useLayoutCircular":{"id":"api/layout-circular/functions/useLayoutCircular","title":"Function: useLayoutCircular()","description":"useLayoutCircular(settings?): object","sidebar":"docs"},"api/layout-circular/index":{"id":"api/layout-circular/index","title":"@react-sigma/layout-circular","description":"Hook","sidebar":"docs"},"api/layout-core/functions/useLayoutFactory":{"id":"api/layout-core/functions/useLayoutFactory","title":"Function: useLayoutFactory()","description":"useLayoutFactory\\\\(layout, defaultSettings): LayoutHook\\\\","sidebar":"docs"},"api/layout-core/functions/useWorkerLayoutFactory":{"id":"api/layout-core/functions/useWorkerLayoutFactory","title":"Function: useWorkerLayoutFactory()","description":"useWorkerLayoutFactory\\\\(worker): LayoutWorkerHook\\\\","sidebar":"docs"},"api/layout-core/functions/WorkerLayoutControl":{"id":"api/layout-core/functions/WorkerLayoutControl","title":"Function: WorkerLayoutControl()","description":"WorkerLayoutControl\\\\(namedParameters): Element","sidebar":"docs"},"api/layout-core/index":{"id":"api/layout-core/index","title":"@react-sigma/layout-core","description":"React Sigma core module for layouts.","sidebar":"docs"},"api/layout-core/interfaces/WorkerLayoutControlProps":{"id":"api/layout-core/interfaces/WorkerLayoutControlProps","title":"Interface: WorkerLayoutControlProps\\\\<T\\\\>","description":"Properties for WorkerLayoutControl component","sidebar":"docs"},"api/layout-core/type-aliases/LayoutHook":{"id":"api/layout-core/type-aliases/LayoutHook","title":"Type Alias: LayoutHook()\\\\<T\\\\>","description":"LayoutHook\\\\: (settings?) => object","sidebar":"docs"},"api/layout-core/type-aliases/LayoutWorkerHook":{"id":"api/layout-core/type-aliases/LayoutWorkerHook","title":"Type Alias: LayoutWorkerHook()\\\\<T\\\\>","description":"LayoutWorkerHook\\\\: (settings) => object","sidebar":"docs"},"api/layout-force/functions/LayoutForceControl":{"id":"api/layout-force/functions/LayoutForceControl","title":"Function: LayoutForceControl()","description":"LayoutForceControl(props, context?): ReactNode","sidebar":"docs"},"api/layout-force/functions/useLayoutForce":{"id":"api/layout-force/functions/useLayoutForce","title":"Function: useLayoutForce()","description":"useLayoutForce(settings?): object","sidebar":"docs"},"api/layout-force/functions/useWorkerLayoutForce":{"id":"api/layout-force/functions/useWorkerLayoutForce","title":"Function: useWorkerLayoutForce()","description":"useWorkerLayoutForce(settings): object","sidebar":"docs"},"api/layout-force/index":{"id":"api/layout-force/index","title":"@react-sigma/layout-force","description":"Component","sidebar":"docs"},"api/layout-force/type-aliases/LayoutForceControlProps":{"id":"api/layout-force/type-aliases/LayoutForceControlProps","title":"Type Alias: LayoutForceControlProps","description":"LayoutForceControlProps: Omit\\\\, \\"layout\\" \\\\| \\"settings\\"\\\\> & object","sidebar":"docs"},"api/layout-forceatlas2/functions/LayoutForceAtlas2Control":{"id":"api/layout-forceatlas2/functions/LayoutForceAtlas2Control","title":"Function: LayoutForceAtlas2Control()","description":"LayoutForceAtlas2Control(props, context?): ReactNode","sidebar":"docs"},"api/layout-forceatlas2/functions/useLayoutForceAtlas2":{"id":"api/layout-forceatlas2/functions/useLayoutForceAtlas2","title":"Function: useLayoutForceAtlas2()","description":"useLayoutForceAtlas2(settings?): object","sidebar":"docs"},"api/layout-forceatlas2/functions/useWorkerLayoutForceAtlas2":{"id":"api/layout-forceatlas2/functions/useWorkerLayoutForceAtlas2","title":"Function: useWorkerLayoutForceAtlas2()","description":"useWorkerLayoutForceAtlas2(settings): object","sidebar":"docs"},"api/layout-forceatlas2/index":{"id":"api/layout-forceatlas2/index","title":"@react-sigma/layout-forceatlas2","description":"Component","sidebar":"docs"},"api/layout-forceatlas2/type-aliases/LayoutForceAtlas2ControlProps":{"id":"api/layout-forceatlas2/type-aliases/LayoutForceAtlas2ControlProps","title":"Type Alias: LayoutForceAtlas2ControlProps","description":"LayoutForceAtlas2ControlProps: Omit\\\\, \\"layout\\" \\\\| \\"settings\\"\\\\> & object","sidebar":"docs"},"api/layout-noverlap/functions/LayoutNoverlapControl":{"id":"api/layout-noverlap/functions/LayoutNoverlapControl","title":"Function: LayoutNoverlapControl()","description":"LayoutNoverlapControl(props, context?): ReactNode","sidebar":"docs"},"api/layout-noverlap/functions/useLayoutNoverlap":{"id":"api/layout-noverlap/functions/useLayoutNoverlap","title":"Function: useLayoutNoverlap()","description":"useLayoutNoverlap(settings?): object","sidebar":"docs"},"api/layout-noverlap/functions/useWorkerLayoutNoverlap":{"id":"api/layout-noverlap/functions/useWorkerLayoutNoverlap","title":"Function: useWorkerLayoutNoverlap()","description":"useWorkerLayoutNoverlap(settings): object","sidebar":"docs"},"api/layout-noverlap/index":{"id":"api/layout-noverlap/index","title":"@react-sigma/layout-noverlap","description":"Component","sidebar":"docs"},"api/layout-noverlap/type-aliases/LayoutNoverlapControlProps":{"id":"api/layout-noverlap/type-aliases/LayoutNoverlapControlProps","title":"Type Alias: LayoutNoverlapControlProps","description":"LayoutNoverlapControlProps: Omit\\\\, \\"layout\\" \\\\| \\"settings\\"\\\\> & object","sidebar":"docs"},"api/layout-random/functions/useLayoutRandom":{"id":"api/layout-random/functions/useLayoutRandom","title":"Function: useLayoutRandom()","description":"useLayoutRandom(settings?): object","sidebar":"docs"},"api/layout-random/index":{"id":"api/layout-random/index","title":"@react-sigma/layout-random","description":"Functions","sidebar":"docs"},"changelog":{"id":"changelog","title":"changelog","description":""},"example/controls":{"id":"example/controls","title":"Controls","description":"The library comes with a system of controls,","sidebar":"docs"},"example/drag_n_drop":{"id":"example/drag_n_drop","title":"Drag\'n\'Drop","description":"By register some events on sigma, you can easely create a drag\'ndrop feature.","sidebar":"docs"},"example/events":{"id":"example/events","title":"Events","description":"Sigma dispatch various events that you can listen :","sidebar":"docs"},"example/external_state":{"id":"example/external_state","title":"External State","description":"If you want to control the sigma instance outside the SigmaContainer component,","sidebar":"docs"},"example/layouts":{"id":"example/layouts","title":"Layouts","description":"The react-sigma includes some sub-libraries for managing layouts on graphs.","sidebar":"docs"},"example/load-graph":{"id":"example/load-graph","title":"Load a graph","description":"Graph property on SigmaContainer","sidebar":"docs"},"faq":{"id":"faq","title":"Frequently Asked Questions","description":"How I can correct the error Error container has no height. ?","sidebar":"docs"},"start-installation":{"id":"start-installation","title":"Installation","description":"Prerequisites","sidebar":"docs"},"start-introduction":{"id":"start-introduction","title":"Introduction","description":"Concept","sidebar":"docs"},"start-setup":{"id":"start-setup","title":"Setup","description":"1. Follow all the steps from the installation page","sidebar":"docs"}}}}')}}]);