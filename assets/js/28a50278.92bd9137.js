"use strict";(self.webpackChunk_react_sigma_website=self.webpackChunk_react_sigma_website||[]).push([[7784],{7459:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"api/core/interfaces/ZoomControlProps","title":"Interface: ZoomControlProps","description":"Defined in13","source":"@site/docs/api/core/interfaces/ZoomControlProps.md","sourceDirName":"api/core/interfaces","slug":"/api/core/interfaces/ZoomControlProps","permalink":"/react-sigma/docs/api/core/interfaces/ZoomControlProps","draft":false,"unlisted":false,"editUrl":"https://github.com/sim51/react-sigma/tree/main/packages/website/docs/api/core/interfaces/ZoomControlProps.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Interface: SigmaContextInterface\\\\<N, E, G\\\\>","permalink":"/react-sigma/docs/api/core/interfaces/SigmaContextInterface"},"next":{"title":"Type Alias: EventHandlers","permalink":"/react-sigma/docs/api/core/type-aliases/EventHandlers"}}');var r=n(1085),t=n(1184);const c={},i="Interface: ZoomControlProps",l={},a=[{value:"Properties",id:"properties",level:2},{value:"animationDuration?",id:"animationduration",level:3},{value:"children?",id:"children",level:3},{value:"className?",id:"classname",level:3},{value:"labels?",id:"labels",level:3},{value:"reset?",id:"reset",level:4},{value:"zoomIn?",id:"zoomin",level:4},{value:"zoomOut?",id:"zoomout",level:4},{value:"style?",id:"style",level:3}];function d(e){const o={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.header,{children:(0,r.jsx)(o.h1,{id:"interface-zoomcontrolprops",children:"Interface: ZoomControlProps"})}),"\n",(0,r.jsxs)(o.p,{children:["Defined in: ",(0,r.jsx)(o.a,{href:"https://github.com/sim51/react-sigma/blob/a22a388e56a8452d7ac0be056317fb1c4a86babc/packages/core/src/components/controls/ZoomControl.tsx#L13",children:"packages/core/src/components/controls/ZoomControl.tsx:13"})]}),"\n",(0,r.jsxs)(o.p,{children:["Properties for ",(0,r.jsx)(o.code,{children:"ZoomControl"})," component"]}),"\n",(0,r.jsx)(o.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(o.h3,{id:"animationduration",children:"animationDuration?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"animationDuration"}),": ",(0,r.jsx)(o.code,{children:"number"})]}),"\n"]}),"\n",(0,r.jsxs)(o.p,{children:["Defined in: ",(0,r.jsx)(o.a,{href:"https://github.com/sim51/react-sigma/blob/a22a388e56a8452d7ac0be056317fb1c4a86babc/packages/core/src/components/controls/ZoomControl.tsx#L27",children:"packages/core/src/components/controls/ZoomControl.tsx:27"})]}),"\n",(0,r.jsx)(o.p,{children:"Number of ms for the zoom animation (default is 200ms)"}),"\n",(0,r.jsx)(o.hr,{}),"\n",(0,r.jsx)(o.h3,{id:"children",children:"children?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"children"}),": [",(0,r.jsx)(o.code,{children:"Element"}),", ",(0,r.jsx)(o.code,{children:"Element"}),", ",(0,r.jsx)(o.code,{children:"Element"}),"]"]}),"\n"]}),"\n",(0,r.jsxs)(o.p,{children:["Defined in: ",(0,r.jsx)(o.a,{href:"https://github.com/sim51/react-sigma/blob/a22a388e56a8452d7ac0be056317fb1c4a86babc/packages/core/src/components/controls/ZoomControl.tsx#L41",children:"packages/core/src/components/controls/ZoomControl.tsx:41"})]}),"\n",(0,r.jsx)(o.p,{children:'It\'s possible to customize the button, by passing to JSX Element.\nFirst one is for the "zoom in", second for "zoom out" and third for "view whole graph".\nExample :'}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{className:"language-jsx",children:"<ZoomControl>\n  <BsZoomIn />\n  <BsZoomOut />\n  <BiReset />\n</FullScreenControl>\n"})}),"\n",(0,r.jsx)(o.hr,{}),"\n",(0,r.jsx)(o.h3,{id:"classname",children:"className?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"className"}),": ",(0,r.jsx)(o.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsxs)(o.p,{children:["Defined in: ",(0,r.jsx)(o.a,{href:"https://github.com/sim51/react-sigma/blob/a22a388e56a8452d7ac0be056317fb1c4a86babc/packages/core/src/components/controls/ZoomControl.tsx#L17",children:"packages/core/src/components/controls/ZoomControl.tsx:17"})]}),"\n",(0,r.jsx)(o.p,{children:"HTML class that will be added to all div button wrapper"}),"\n",(0,r.jsx)(o.hr,{}),"\n",(0,r.jsx)(o.h3,{id:"labels",children:"labels?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"labels"}),": ",(0,r.jsx)(o.code,{children:"object"})]}),"\n"]}),"\n",(0,r.jsxs)(o.p,{children:["Defined in: ",(0,r.jsx)(o.a,{href:"https://github.com/sim51/react-sigma/blob/a22a388e56a8452d7ac0be056317fb1c4a86babc/packages/core/src/components/controls/ZoomControl.tsx#L47",children:"packages/core/src/components/controls/ZoomControl.tsx:47"})]}),"\n",(0,r.jsx)(o.p,{children:"Map of the labels we use in the component.\nThis is usefull for I18N"}),"\n",(0,r.jsx)(o.h4,{id:"reset",children:"reset?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"reset"}),": ",(0,r.jsx)(o.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(o.h4,{id:"zoomin",children:"zoomIn?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"zoomIn"}),": ",(0,r.jsx)(o.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(o.h4,{id:"zoomout",children:"zoomOut?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"zoomOut"}),": ",(0,r.jsx)(o.code,{children:"string"})]}),"\n"]}),"\n",(0,r.jsx)(o.hr,{}),"\n",(0,r.jsx)(o.h3,{id:"style",children:"style?"}),"\n",(0,r.jsxs)(o.blockquote,{children:["\n",(0,r.jsxs)(o.p,{children:[(0,r.jsx)(o.code,{children:"optional"})," ",(0,r.jsx)(o.strong,{children:"style"}),": ",(0,r.jsx)(o.code,{children:"CSSProperties"})]}),"\n"]}),"\n",(0,r.jsxs)(o.p,{children:["Defined in: ",(0,r.jsx)(o.a,{href:"https://github.com/sim51/react-sigma/blob/a22a388e56a8452d7ac0be056317fb1c4a86babc/packages/core/src/components/controls/ZoomControl.tsx#L22",children:"packages/core/src/components/controls/ZoomControl.tsx:22"})]}),"\n",(0,r.jsx)(o.p,{children:"HTML CSS style that will be added to all div button wrapper"})]})}function h(e={}){const{wrapper:o}={...(0,t.R)(),...e.components};return o?(0,r.jsx)(o,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1184:(e,o,n)=>{n.d(o,{R:()=>c,x:()=>i});var s=n(4041);const r={},t=s.createContext(r);function c(e){const o=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(t.Provider,{value:o},e.children)}}}]);