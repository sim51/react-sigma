"use strict";(self.webpackChunk_react_sigma_website=self.webpackChunk_react_sigma_website||[]).push([[548],{548:(e,t,n)=>{n.d(t,{Ay:()=>R,IU:()=>k,yk:()=>x});var r=n(2072),i=n(5662);function o(e){var t=function(e,t){if("object"!=typeof e||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,t||"default");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:t+""}function a(e,t,n){return(t=o(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,o(r.key),r)}}function l(e){return l=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},l(e)}function v(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(v=function(){return!!e})()}function f(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function d(e,t,n){return t=l(t),function(e,t){if(t&&("object"==typeof t||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return f(e)}(e,v()?Reflect.construct(t,n||[],l(e).constructor):t.apply(e,n))}function p(e,t){return p=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},p(e,t)}function g(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function _(e){return function(e){if(Array.isArray(e))return g(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return g(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?g(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function b(e,t,n,r){return{x:Math.pow(1-e,2)*t.x+2*(1-e)*e*n.x+Math.pow(e,2)*r.x,y:Math.pow(1-e,2)*t.y+2*(1-e)*e*n.y+Math.pow(e,2)*r.y}}function h(e){var t=e.curvatureAttribute,n=e.defaultCurvature,r=e.keepLabelUpright,i=void 0===r||r;return function(e,r,o,a,c){var s=c.edgeLabelSize,u=r[t]||n,l=c.edgeLabelFont,v=c.edgeLabelWeight,f=c.edgeLabelColor.attribute?r[c.edgeLabelColor.attribute]||c.edgeLabelColor.color||"#000":c.edgeLabelColor.color,d=r.label;if(d){e.fillStyle=f,e.font="".concat(v," ").concat(s,"px ").concat(l);var p=!i||o.x<a.x,g=p?o.x:a.x,_=p?o.y:a.y,h=p?a.x:o.x,y=p?a.y:o.y,m=(g+h)/2,x=(_+y)/2,T=h-g,w=y-_,k=Math.sqrt(Math.pow(T,2)+Math.pow(w,2)),A=p?1:-1,S=m+w*u*A,z=x-T*u*A,O=.7*r.size+5,R={x:z-_,y:-(S-g)},E=Math.sqrt(Math.pow(R.x,2)+Math.pow(R.y,2)),P={x:y-z,y:-(h-S)},C=Math.sqrt(Math.pow(P.x,2)+Math.pow(P.y,2)),M={x:S+=O*w/k,y:z-=O*T/k},I={x:g+=O*R.x/E,y:_+=O*R.y/E},j={x:h+=O*P.x/C,y:y+=O*P.y/C},L=function(e,t,n){for(var r=0,i=e,o=0;o<20;o++){var a=b((o+1)/20,e,t,n);r+=Math.sqrt(Math.pow(i.x-a.x,2)+Math.pow(i.y-a.y,2)),i=a}return r}(I,M,j);if(!(L<o.size+a.size)){var N=e.measureText(d).width,B=L-o.size-a.size;if(N>B){for(d+="\u2026",N=e.measureText(d).width;N>B&&d.length>1;)d=d.slice(0,-2)+"\u2026",N=e.measureText(d).width;if(d.length<4)return}for(var D={},F=0,U=d.length;F<U;F++){var H=d[F];D[H]||(D[H]=e.measureText(H).width*(1+.35*u))}for(var V=.5-N/L/2,G=0,q=d.length;G<q;G++){var K=d[G],W=b(V,I,M,j),Q=2*(1-V)*(S-g)+2*V*(h-S),X=2*(1-V)*(z-_)+2*V*(y-z),Y=Math.atan2(X,Q);e.save(),e.translate(W.x,W.y),e.rotate(Y),e.fillText(K,0,0),e.restore(),V+=D[K]/L}}}}}function y(e){var t=e.arrowHead,n="target"===(null==t?void 0:t.extremity)||"both"===(null==t?void 0:t.extremity),r="source"===(null==t?void 0:t.extremity)||"both"===(null==t?void 0:t.extremity);return"\nprecision highp float;\n\nvarying vec4 v_color;\nvarying float v_thickness;\nvarying float v_feather;\nvarying vec2 v_cpA;\nvarying vec2 v_cpB;\nvarying vec2 v_cpC;\n".concat(n?"\nvarying float v_targetSize;\nvarying vec2 v_targetPoint;":"","\n").concat(r?"\nvarying float v_sourceSize;\nvarying vec2 v_sourcePoint;":"","\n").concat(t?"\nuniform float u_lengthToThicknessRatio;\nuniform float u_widenessToThicknessRatio;":"","\n\nfloat det(vec2 a, vec2 b) {\n  return a.x * b.y - b.x * a.y;\n}\n\nvec2 getDistanceVector(vec2 b0, vec2 b1, vec2 b2) {\n  float a = det(b0, b2), b = 2.0 * det(b1, b0), d = 2.0 * det(b2, b1);\n  float f = b * d - a * a;\n  vec2 d21 = b2 - b1, d10 = b1 - b0, d20 = b2 - b0;\n  vec2 gf = 2.0 * (b * d21 + d * d10 + a * d20);\n  gf = vec2(gf.y, -gf.x);\n  vec2 pp = -f * gf / dot(gf, gf);\n  vec2 d0p = b0 - pp;\n  float ap = det(d0p, d20), bp = 2.0 * det(d10, d0p);\n  float t = clamp((ap + bp) / (2.0 * a + b + d), 0.0, 1.0);\n  return mix(mix(b0, b1, t), mix(b1, b2, t), t);\n}\n\nfloat distToQuadraticBezierCurve(vec2 p, vec2 b0, vec2 b1, vec2 b2) {\n  return length(getDistanceVector(b0 - p, b1 - p, b2 - p));\n}\n\nconst vec4 transparent = vec4(0.0, 0.0, 0.0, 0.0);\n\nvoid main(void) {\n  float dist = distToQuadraticBezierCurve(gl_FragCoord.xy, v_cpA, v_cpB, v_cpC);\n  float thickness = v_thickness;\n").concat(n?"\n  float distToTarget = length(gl_FragCoord.xy - v_targetPoint);\n  float targetArrowLength = v_targetSize + thickness * u_lengthToThicknessRatio;\n  if (distToTarget < targetArrowLength) {\n    thickness = (distToTarget - v_targetSize) / (targetArrowLength - v_targetSize) * u_widenessToThicknessRatio * thickness;\n  }":"","\n").concat(r?"\n  float distToSource = length(gl_FragCoord.xy - v_sourcePoint);\n  float sourceArrowLength = v_sourceSize + thickness * u_lengthToThicknessRatio;\n  if (distToSource < sourceArrowLength) {\n    thickness = (distToSource - v_sourceSize) / (sourceArrowLength - v_sourceSize) * u_widenessToThicknessRatio * thickness;\n  }":"","\n\n  float halfThickness = thickness / 2.0;\n  if (dist < halfThickness) {\n    #ifdef PICKING_MODE\n    gl_FragColor = v_color;\n    #else\n    float t = smoothstep(\n      halfThickness - v_feather,\n      halfThickness,\n      dist\n    );\n\n    gl_FragColor = mix(v_color, transparent, t);\n    #endif\n  } else {\n    gl_FragColor = transparent;\n  }\n}\n")}function m(e){var t=e.arrowHead,n="target"===(null==t?void 0:t.extremity)||"both"===(null==t?void 0:t.extremity),r="source"===(null==t?void 0:t.extremity)||"both"===(null==t?void 0:t.extremity);return"\nattribute vec4 a_id;\nattribute vec4 a_color;\nattribute float a_direction;\nattribute float a_thickness;\nattribute vec2 a_source;\nattribute vec2 a_target;\nattribute float a_current;\nattribute float a_curvature;\n".concat(n?"attribute float a_targetSize;\n":"","\n").concat(r?"attribute float a_sourceSize;\n":"","\n\nuniform mat3 u_matrix;\nuniform float u_sizeRatio;\nuniform float u_pixelRatio;\nuniform vec2 u_dimensions;\nuniform float u_minEdgeThickness;\nuniform float u_feather;\n\nvarying vec4 v_color;\nvarying float v_thickness;\nvarying float v_feather;\nvarying vec2 v_cpA;\nvarying vec2 v_cpB;\nvarying vec2 v_cpC;\n").concat(n?"\nvarying float v_targetSize;\nvarying vec2 v_targetPoint;":"","\n").concat(r?"\nvarying float v_sourceSize;\nvarying vec2 v_sourcePoint;":"","\n").concat(t?"\nuniform float u_widenessToThicknessRatio;":"",'\n\nconst float bias = 255.0 / 254.0;\nconst float epsilon = 0.7;\n\nvec2 clipspaceToViewport(vec2 pos, vec2 dimensions) {\n  return vec2(\n    (pos.x + 1.0) * dimensions.x / 2.0,\n    (pos.y + 1.0) * dimensions.y / 2.0\n  );\n}\n\nvec2 viewportToClipspace(vec2 pos, vec2 dimensions) {\n  return vec2(\n    pos.x / dimensions.x * 2.0 - 1.0,\n    pos.y / dimensions.y * 2.0 - 1.0\n  );\n}\n\nvoid main() {\n  float minThickness = u_minEdgeThickness;\n\n  // Selecting the correct position\n  // Branchless "position = a_source if a_current == 1.0 else a_target"\n  vec2 position = a_source * max(0.0, a_current) + a_target * max(0.0, 1.0 - a_current);\n  position = (u_matrix * vec3(position, 1)).xy;\n\n  vec2 source = (u_matrix * vec3(a_source, 1)).xy;\n  vec2 target = (u_matrix * vec3(a_target, 1)).xy;\n\n  vec2 viewportPosition = clipspaceToViewport(position, u_dimensions);\n  vec2 viewportSource = clipspaceToViewport(source, u_dimensions);\n  vec2 viewportTarget = clipspaceToViewport(target, u_dimensions);\n\n  vec2 delta = viewportTarget.xy - viewportSource.xy;\n  float len = length(delta);\n  vec2 normal = vec2(-delta.y, delta.x) * a_direction;\n  vec2 unitNormal = normal / len;\n  float boundingBoxThickness = len * a_curvature;\n\n  float curveThickness = max(minThickness, a_thickness / u_sizeRatio);\n  v_thickness = curveThickness * u_pixelRatio;\n  v_feather = u_feather;\n\n  v_cpA = viewportSource;\n  v_cpB = 0.5 * (viewportSource + viewportTarget) + unitNormal * a_direction * boundingBoxThickness;\n  v_cpC = viewportTarget;\n\n  vec2 viewportOffsetPosition = (\n    viewportPosition +\n    unitNormal * (boundingBoxThickness / 2.0 + sign(boundingBoxThickness) * (').concat(t?"curveThickness * u_widenessToThicknessRatio":"curveThickness"," + epsilon)) *\n    max(0.0, a_direction) // NOTE: cutting the bounding box in half to avoid overdraw\n  );\n\n  position = viewportToClipspace(viewportOffsetPosition, u_dimensions);\n  gl_Position = vec4(position, 0, 1);\n    \n").concat(n?"\n  v_targetSize = a_targetSize * u_pixelRatio / u_sizeRatio;\n  v_targetPoint = viewportTarget;\n":"","\n").concat(r?"\n  v_sourceSize = a_sourceSize * u_pixelRatio / u_sizeRatio;\n  v_sourcePoint = viewportSource;\n":"","\n\n  #ifdef PICKING_MODE\n  // For picking mode, we use the ID as the color:\n  v_color = a_id;\n  #else\n  // For normal mode, we use the color:\n  v_color = a_color;\n  #endif\n\n  v_color.a *= bias;\n}\n")}var x=.25,T={arrowHead:null,curvatureAttribute:"curvature",defaultCurvature:x},w={edgeIndexAttribute:"parallelIndex",edgeMinIndexAttribute:"parallelMinIndex",edgeMaxIndexAttribute:"parallelMaxIndex"};function k(e,t){var n=s(s({},w),t||{}),r={},i={},o={},a=0;e.forEachNode((function(e){r[e]=++a+""})),e.forEachEdge((function(e,t,n,a){var c=r[n],s=r[a],u=[c,s].join("-");i[e]=u,o[u]=[c,s].sort().join("-")}));var c={},u={};for(var l in e.forEachEdge((function(e){var t=i[e],n=o[t];c[t]=c[t]||[],c[t].push(e),u[n]=u[n]||[],u[n].push(e)})),c){var v=c[l],f=v.length,d=u[o[l]].length;if(1===f&&1===d){var p=v[0];e.setEdgeAttribute(p,n.edgeIndexAttribute,null),e.setEdgeAttribute(p,n.edgeMaxIndexAttribute,null)}else if(1===f){var g=v[0];e.setEdgeAttribute(g,n.edgeIndexAttribute,1),e.setEdgeAttribute(g,n.edgeMaxIndexAttribute,1)}else if(f===d)for(var _=(f-1)/2,b=-_,h=0;h<f;h++){var y=v[h],m=-(f-1)/2+h;e.setEdgeAttribute(y,n.edgeIndexAttribute,m),e.setEdgeAttribute(y,n.edgeMinIndexAttribute,b),e.setEdgeAttribute(y,n.edgeMaxIndexAttribute,_)}else for(var x=0;x<f;x++){var T=v[x];e.setEdgeAttribute(T,n.edgeIndexAttribute,x+1),e.setEdgeAttribute(T,n.edgeMaxIndexAttribute,f)}}}var A=WebGLRenderingContext,S=A.UNSIGNED_BYTE,z=A.FLOAT;function O(e){var t=s(s({},T),e||{}),n=t,o=n.arrowHead,c=n.curvatureAttribute,l=n.drawLabel,v="target"===(null==o?void 0:o.extremity)||"both"===(null==o?void 0:o.extremity),g="source"===(null==o?void 0:o.extremity)||"both"===(null==o?void 0:o.extremity),b=["u_matrix","u_sizeRatio","u_dimensions","u_pixelRatio","u_feather","u_minEdgeThickness"].concat(_(o?["u_lengthToThicknessRatio","u_widenessToThicknessRatio"]:[]));return function(e){function n(){var e;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,n);for(var r=arguments.length,i=new Array(r),o=0;o<r;o++)i[o]=arguments[o];return a(f(e=d(this,n,[].concat(i))),"drawLabel",l||h(t)),e}var r,s,T;return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&p(e,t)}(n,e),r=n,(s=[{key:"getDefinition",value:function(){return{VERTICES:6,VERTEX_SHADER_SOURCE:m(t),FRAGMENT_SHADER_SOURCE:y(t),METHOD:WebGLRenderingContext.TRIANGLES,UNIFORMS:b,ATTRIBUTES:[{name:"a_source",size:2,type:z},{name:"a_target",size:2,type:z}].concat(_(v?[{name:"a_targetSize",size:1,type:z}]:[]),_(g?[{name:"a_sourceSize",size:1,type:z}]:[]),[{name:"a_thickness",size:1,type:z},{name:"a_curvature",size:1,type:z},{name:"a_color",size:4,type:S,normalized:!0},{name:"a_id",size:4,type:S,normalized:!0}]),CONSTANT_ATTRIBUTES:[{name:"a_current",size:1,type:z},{name:"a_direction",size:1,type:z}],CONSTANT_DATA:[[0,1],[0,-1],[1,1],[0,-1],[1,1],[1,-1]]}}},{key:"processVisibleItem",value:function(e,t,n,r,o){var a,s=o.size||1,u=n.x,l=n.y,f=r.x,d=r.y,p=(0,i.Ko)(o.color),_=null!==(a=o[c])&&void 0!==a?a:x,b=this.array;b[t++]=u,b[t++]=l,b[t++]=f,b[t++]=d,v&&(b[t++]=r.size),g&&(b[t++]=n.size),b[t++]=s,b[t++]=_,b[t++]=p,b[t++]=e}},{key:"setUniforms",value:function(e,t){var n=t.gl,r=t.uniformLocations,i=r.u_matrix,a=r.u_pixelRatio,c=r.u_feather,s=r.u_sizeRatio,u=r.u_dimensions,l=r.u_minEdgeThickness;if(n.uniformMatrix3fv(i,!1,e.matrix),n.uniform1f(a,e.pixelRatio),n.uniform1f(s,e.sizeRatio),n.uniform1f(c,e.antiAliasingFeather),n.uniform2f(u,e.width*e.pixelRatio,e.height*e.pixelRatio),n.uniform1f(l,e.minEdgeThickness),o){var v=r.u_lengthToThicknessRatio,f=r.u_widenessToThicknessRatio;n.uniform1f(v,o.lengthToThicknessRatio),n.uniform1f(f,o.widenessToThicknessRatio)}}}])&&u(r.prototype,s),T&&u(r,T),Object.defineProperty(r,"prototype",{writable:!1}),n}(r.SI)}var R=O();O({arrowHead:r.ft}),O({arrowHead:s(s({},r.ft),{},{extremity:"both"})})}}]);