"use strict";(self.webpackChunk_react_sigma_website=self.webpackChunk_react_sigma_website||[]).push([[7624],{5532:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"api","title":"Project structure","description":"React Sigma is composed of one core module, and several others for managing graph layouts.","source":"@site/docs/api.md","sourceDirName":".","slug":"/api","permalink":"/react-sigma/docs/api","draft":false,"unlisted":false,"editUrl":"https://github.com/sim51/react-sigma/tree/main/packages/website/docs/api.md","tags":[],"version":"current","frontMatter":{},"sidebar":"docs","previous":{"title":"Setup","permalink":"/react-sigma/docs/start-setup"},"next":{"title":"@react-sigma/core","permalink":"/react-sigma/docs/api/core/"}}');var s=o(1085),a=o(1184);const i={},r="Project structure",l={},c=[{value:"Core",id:"core",level:2},{value:"Layout modules",id:"layout-modules",level:2},{value:"None iterative layouts",id:"none-iterative-layouts",level:3},{value:"Description",id:"description",level:4},{value:"How to use it",id:"how-to-use-it",level:4},{value:"Available layouts",id:"available-layouts",level:4},{value:"Iterative layouts",id:"iterative-layouts",level:3},{value:"Description",id:"description-1",level:4},{value:"How to use it",id:"how-to-use-it-1",level:4},{value:"Available layouts",id:"available-layouts-1",level:4}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"project-structure",children:"Project structure"})}),"\n",(0,s.jsx)(n.p,{children:"React Sigma is composed of one core module, and several others for managing graph layouts."}),"\n",(0,s.jsx)(n.h2,{id:"core",children:"Core"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"/docs/api/core",children:"core"})," is the main one with ",(0,s.jsx)(n.a,{href:"/docs/api/core#component",children:"components"})," and ",(0,s.jsx)(n.a,{href:"/docs/api/core#hook",children:"hooks"})," that help you to display a graph with react."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install @react-sigma/core\n"})}),"\n",(0,s.jsx)(n.h2,{id:"layout-modules",children:"Layout modules"}),"\n",(0,s.jsxs)(n.p,{children:["There is one module per graphology layout, plus one for the genericity (",(0,s.jsx)(n.a,{href:"/docs/api/layout-core",children:"layout-core"}),")."]}),"\n",(0,s.jsx)(n.p,{children:"In graphology, there are two types of layout :"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"None iterative layouts that just need to be call to compute once for all the spatialisation (ex: random, circle)."}),"\n",(0,s.jsx)(n.li,{children:"Iterative layouts, that need to spawn a web worker to continuously run the algo (ex: forceatlas2)"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"none-iterative-layouts",children:"None iterative layouts"}),"\n",(0,s.jsx)(n.h4,{id:"description",children:"Description"}),"\n",(0,s.jsxs)(n.p,{children:["For those layouts, in the corresponding module we export a ",(0,s.jsx)(n.strong,{children:"hook"})," that you can call to :"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["compute the new nodes position (the ",(0,s.jsx)(n.code,{children:"positions"})," function)"]}),"\n",(0,s.jsxs)(n.li,{children:["compute the new nodes position and assign it to the sigma graph (the ",(0,s.jsx)(n.code,{children:"assign"})," function)"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"how-to-use-it",children:"How to use it"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Install the module"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install @react-sigma/layout-circular graphology-layout\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:["Import the ",(0,s.jsx)(n.code,{children:"useLayoutCircular"})," hook"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import { useLayoutCircular } from "@react-sigma/layout-circular";\n'})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsxs)(n.li,{children:["Initialize the hook in your component (that must be a child of ",(0,s.jsx)(n.code,{children:"SigmaContainer"}),")"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const {positions, assign} = useLayoutCircular(...);\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"4",children:["\n",(0,s.jsxs)(n.li,{children:["Use the ",(0,s.jsx)(n.code,{children:"positions"})," function"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:'import { animateNodes } from "sigma/utils/animate";\n...\nuseEffect(() => {\n  animateNodes(sigma.getGraph(), positions(), { duration: 1000 });\n}, [positions, sigma]);\n'})}),"\n",(0,s.jsxs)(n.ol,{start:"5",children:["\n",(0,s.jsxs)(n.li,{children:["Or use the ",(0,s.jsx)(n.code,{children:"assign"})," function"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"useEffect(() => {\n  assign(sigma.getGraph());\n}, [assign, sigma]);\n"})}),"\n",(0,s.jsx)(n.h4,{id:"available-layouts",children:"Available layouts"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/api/layout-random",children:"layout-random"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/api/layout-circular",children:"layout-circular"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/api/layout-circlepack",children:"layout-circlepack"})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"iterative-layouts",children:"Iterative layouts"}),"\n",(0,s.jsx)(n.h4,{id:"description-1",children:"Description"}),"\n",(0,s.jsx)(n.p,{children:"For those layouts, in the corresponding module we export :"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["the same hook than for ",(0,s.jsx)(n.em,{children:"none iterative layouts"})," (it run a fix number of iteration of the algo that can be configured in the hook: ",(0,s.jsx)(n.code,{children:"useLayoutForceAtlas2({ iterations: 100 })"})]}),"\n",(0,s.jsxs)(n.li,{children:["A hook to manage the worker layout : ",(0,s.jsx)(n.code,{children:"const {stop, start, kill, isRunning} = useWorkerLayoutForceAtlas2(...)"})]}),"\n",(0,s.jsx)(n.li,{children:"A control component that use the above hook, to display a stop/start button on the graph"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"how-to-use-it-1",children:"How to use it"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Install the module"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install @react-sigma/layout-forceatlas2 graphology-layout-forceatlas2\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"2",children:["\n",(0,s.jsxs)(n.li,{children:["Inside the ",(0,s.jsx)(n.code,{children:"SigmaContainer"})," just add the component :"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'import { LayoutForceAtlas2Control } from "@react-sigma/layout-forceatlas2";\n...\n<SigmaContainer>\n  <MyGraph />\n  <ControlsContainer position={"bottom-right"}>\n    <LayoutForceAtlas2Control />\n  </ControlsContainer>\n</SigmaContainer>\n'})}),"\n",(0,s.jsx)(n.h4,{id:"available-layouts-1",children:"Available layouts"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/api/layout-forceatlas2",children:"layout-forceatlas2"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/api/layout-force",children:"layout-force"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/api/layout-noverlap",children:"layout-noverlap"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1184:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>r});var t=o(4041);const s={},a=t.createContext(s);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);